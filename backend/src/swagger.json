{
  "openapi": "3.0.3",
  "info": {
    "title": "API - LABEM",
    "version": "1.0.0",
    "description": "API RESTful escalável e segura desenvolvida com Node.js e Express, oferecendo endpoints para autenticação de usuários, gerenciamento de dados e upload de arquivos.\nImplementa práticas recomendadas do setor, como autenticação stateless com JWT e criptografia de senhas com bcrypt.\nA persistência dos dados é gerenciada pelo MongoDB utilizando o Mongoose ODM.\nConstruída com foco em modularidade e manutenibilidade, sendo ideal para aplicações web ou mobile modernas."
  },
  "servers": [
    {
      "url": "https://labem.onrender.com",
      "description": "Servidor de produção"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    { "name": "Auth", "description": "Autenticação de usuários e admins" },
    { "name": "Contato", "description": "Mensagens de contato" },
    { "name": "Atualizações", "description": "Gerenciamento de atualizações" },
    { "name": "Encontros", "description": "Gerenciamento de encontros" }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login de usuário comum",
        "description": "Autentica um usuário ligante e retorna um token JWT.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "usuario1" },
                  "password": { "type": "string", "example": "senha123" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Login realizado com sucesso!",
                  "token": "<jwt_token>",
                  "isLigante": true
                }
              }
            }
          },
          "401": {
            "description": "Usuário ou senha inválidos.",
            "content": {
              "application/json": {
                "example": { "message": "Usuário ou senha inválidos." }
              }
            }
          }
        }
      }
    },
    "/api/admin/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login de administrador",
        "description": "Autentica um admin e retorna um token JWT.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "admin@labem.com" },
                  "password": { "type": "string", "example": "senhaAdmin" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login admin realizado com sucesso.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Login administrativo realizado com sucesso!",
                  "token": "<jwt_token>",
                  "isAdmin": true
                }
              }
            }
          },
          "401": {
            "description": "Email ou senha inválidos.",
            "content": {
              "application/json": {
                "example": { "message": "Email ou senha inválidos." }
              }
            }
          }
        }
      }
    },
    "/api/contact": {
      "post": {
        "tags": ["Contato"],
        "summary": "Envio de mensagem de contato",
        "description": "Recebe dados do formulário de contato.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string", "example": "João" },
                  "email": { "type": "string", "example": "joao@email.com" },
                  "mensagem": {
                    "type": "string",
                    "example": "Olá, gostaria de saber mais."
                  }
                },
                "required": ["nome", "email", "mensagem"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Mensagem enviada com sucesso!"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Todos os campos são obrigatórios."
                }
              }
            }
          },
          "500": {
            "description": "Erro interno.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao enviar mensagem."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Contato"],
        "summary": "Listar mensagens de contato",
        "description": "Retorna todas as mensagens de contato cadastradas. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de mensagens.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "mensagens": [
                    {
                      "_id": "1",
                      "nome": "João",
                      "email": "joao@email.com",
                      "mensagem": "Olá!"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "500": {
            "description": "Erro ao buscar mensagens.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar mensagens de contato."
                }
              }
            }
          }
        }
      }
    },
    "/api/contact/{id}": {
      "delete": {
        "tags": ["Contato"],
        "summary": "Deletar mensagem de contato",
        "description": "Remove uma mensagem de contato pelo ID. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID da mensagem a ser removida"
          }
        ],
        "responses": {
          "200": {
            "description": "Mensagem deletada com sucesso.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Mensagem deletada com sucesso!"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Mensagem não encontrada.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Mensagem não encontrada."
                }
              }
            }
          },
          "500": {
            "description": "Erro ao deletar mensagem.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao deletar mensagem."
                }
              }
            }
          }
        }
      }
    },
    "/api/updates": {
      "get": {
        "tags": ["Atualizações"],
        "summary": "Listar atualizações",
        "description": "Retorna todas as atualizações cadastradas. Esta rota é pública e não requer autenticação.",
        "security": [],
        "responses": {
          "200": {
            "description": "Lista de atualizações.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "updates": [
                    {
                      "_id": "1",
                      "icone": "fa-star",
                      "titulo": "Nova função",
                      "paragrafo": "Descrição da função."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Erro ao buscar atualizações.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar atualizações."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Atualizações"],
        "summary": "Criar atualização (admin)",
        "description": "Cria uma nova atualização. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "icone": { "type": "string", "example": "fa-star" },
                  "titulo": { "type": "string", "example": "Nova função" },
                  "paragrafo": {
                    "type": "string",
                    "example": "Descrição da função."
                  }
                },
                "required": ["icone", "titulo", "paragrafo"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Atualização criada.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Atualização criada com sucesso!",
                  "update": {
                    "_id": "1",
                    "icone": "fa-star",
                    "titulo": "Nova função",
                    "paragrafo": "Descrição da função."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Todos os campos são obrigatórios."
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "500": {
            "description": "Erro ao criar atualização.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao criar atualização."
                }
              }
            }
          }
        }
      }
    },
    "/api/updates/{id}": {
      "get": {
        "tags": ["Atualizações"],
        "summary": "Obter atualização por ID",
        "description": "Retorna uma atualização específica pelo ID. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID da atualização"
          }
        ],
        "responses": {
          "200": {
            "description": "Atualização encontrada.",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "update": {
                    "_id": "1",
                    "icone": "fa-star",
                    "titulo": "Nova função",
                    "paragrafo": "Descrição da função."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Atualização não encontrada."
          },
          "500": {
            "description": "Erro ao buscar atualização.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar atualização."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Atualizações"],
        "summary": "Editar atualização (admin)",
        "description": "Edita uma atualização existente. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID da atualização a ser editada"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "icone": { "type": "string", "example": "fa-star" },
                  "titulo": { "type": "string", "example": "Título editado" },
                  "paragrafo": { "type": "string", "example": "Texto editado." }
                },
                "required": ["icone", "titulo", "paragrafo"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Atualização editada com sucesso." },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Atualização não encontrada."
          },
          "500": {
            "description": "Erro ao editar atualização.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao editar atualização."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Atualizações"],
        "summary": "Remover atualização (admin)",
        "description": "Remove uma atualização existente. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID da atualização a ser removida"
          }
        ],
        "responses": {
          "200": { "description": "Atualização removida com sucesso." },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Atualização não encontrada."
          },
          "500": {
            "description": "Erro ao remover atualização.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao remover atualização."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Atualizações"],
        "summary": "Editar parcialmente atualização (admin)",
        "description": "Edita parcialmente uma atualização existente. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID da atualização a ser editada"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "icone": { "type": "string", "example": "fa-star" },
                  "titulo": { "type": "string", "example": "Título editado" },
                  "paragrafo": { "type": "string", "example": "Texto editado." }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Atualização editada com sucesso." },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Atualização não encontrada."
          },
          "500": {
            "description": "Erro ao editar atualização.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao editar atualização."
                }
              }
            }
          }
        }
      }
    },
    "/api/encontros": {
      "get": {
        "tags": ["Encontros"],
        "summary": "Listar encontros",
        "description": "Retorna todos os encontros cadastrados. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de encontros. Exemplo de resposta:",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "encontros": [
                    { "_id": "1", "nome": "Encontro 1", "data": "2024-06-01" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "500": {
            "description": "Erro ao buscar encontros.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar encontros."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Encontros"],
        "summary": "Criar encontro (admin)",
        "description": "Cria um novo encontro com upload de arquivos PDF. Requer autenticação JWT de admin. Envie os campos como multipart/form-data.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": { "type": "string", "example": "Encontro 1" },
                  "paragrafo": {
                    "type": "string",
                    "example": "Descrição do encontro."
                  },
                  "slideTeorico": { "type": "string", "format": "binary" },
                  "materialApoio": { "type": "string", "format": "binary" }
                },
                "required": [
                  "titulo",
                  "paragrafo",
                  "slideTeorico",
                  "materialApoio"
                ]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Encontro criado com sucesso." },
          "400": { "description": "Dados inválidos ou arquivos ausentes." },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "413": { "description": "Arquivo muito grande." },
          "500": {
            "description": "Erro ao criar encontro.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao criar encontro."
                }
              }
            }
          }
        }
      }
    },
    "/api/encontros/{id}": {
      "delete": {
        "tags": ["Encontros"],
        "summary": "Remover encontro (admin)",
        "description": "Remove um encontro existente. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID do encontro a ser removido"
          }
        ],
        "responses": {
          "200": { "description": "Encontro removido com sucesso." },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": {
            "description": "Encontro não encontrado."
          },
          "500": {
            "description": "Erro ao remover encontro.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao remover encontro."
                }
              }
            }
          }
        }
      }
    },
    "/api/encontros/{id}/slide": {
      "get": {
        "tags": ["Encontros"],
        "summary": "Baixar slide teórico do encontro",
        "description": "Baixa o PDF dos slides teóricos do encontro. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID do encontro"
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo PDF retornado com sucesso.",
            "content": {
              "application/pdf": {}
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": { "description": "Slide não encontrado." },
          "500": {
            "description": "Erro ao buscar slide.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar slide."
                }
              }
            }
          }
        }
      }
    },
    "/api/encontros/{id}/material": {
      "get": {
        "tags": ["Encontros"],
        "summary": "Baixar material de apoio do encontro",
        "description": "Baixa o PDF do material de apoio do encontro. Requer autenticação JWT de admin.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID do encontro"
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo PDF retornado com sucesso.",
            "content": {
              "application/pdf": {}
            }
          },
          "401": {
            "description": "Não autorizado.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Token inválido ou ausente."
                }
              }
            }
          },
          "404": { "description": "Arquivo não encontrado." },
          "500": {
            "description": "Erro ao buscar material.",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Erro ao buscar material."
                }
              }
            }
          }
        }
      }
    }
  }
}
